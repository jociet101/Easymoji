LET
ID y
ASSIGN
ID x
SEMICOLON
LET
ID z
ASSIGN
NUM 1
SEMICOLON
WHILE
LPAREN
ID y
GREATER
NUM 1
RPAREN
LBRACE
ID z
ASSIGN
ID z
TIMES
ID y
SEMICOLON
ID y
ASSIGN
ID y
MINUS
NUM 1
SEMICOLON
RBRACE
CONST
ID answer
ASSIGN
NUM 42
SEMICOLON
INTERFACE
ID Point
LBRACE
ID x
COLON
NUMBER
SEMICOLON
ID y
COLON
NUMBER
SEMICOLON
RBRACE
CONST
ID pt
ASSIGN
ID Point
LPAREN
RPAREN
SEMICOLON
ID pt
DOT
ID x
ASSIGN
NUM 0
SEMICOLON
ID pt
DOT
ID y
ASSIGN
NUM 0
SEMICOLON
CONST
ID these_are_all_valid_numbers
ASSIGN
LBRACKET
NUM 3.14
COMMA
NUM 6.673e-11
COMMA
NUM 1
COMMA
NUM 3e+08
COMMA
NUM 6.62e-34
COMMA
NUM 6.02e+23
RBRACKET
SEMICOLON
FOR
LPAREN
CONST
ID prop
IN
ID pt
RPAREN
LBRACE
ID console
DOT
ID log
LPAREN
ID prop
LBRACKET
NUM 0
RBRACKET
AS
STRING
RPAREN
SEMICOLON
RBRACE
LET
ID my_function
ASSIGN
LPAREN
ID foo
COLON
ANY
RPAREN
ARROW
ID foo
DIV
ID foo
SEMICOLON
FUNCTION
ID legit_function
LPAREN
ID lol
COLON
BOOLEAN
RPAREN
COLON
VOID
LBRACE
IF
LPAREN
TRUE
AND
FALSE
EQUALS
TRUE
OR
TRUE
RPAREN
LBRACE
RETURN
SEMICOLON
RBRACE
ELSE
IF
LPAREN
ID pt
INSTANCEOF
ID Point
RPAREN
LBRACE
RETURN
SEMICOLON
RBRACE
RBRACE
CONST
ID $a1string
ASSIGN
STR "Hello, world!\n"
SEMICOLON
DO
LBRACE
ID x
ASSIGN
ID x
MINUS
MINUS
NUM 1
SEMICOLON
RBRACE
WHILE
LPAREN
ID x
LESS
NUM 10.74
RPAREN
SEMICOLON
INTERFACE
ID Pointedly
LBRACE
ID x
COLON
NUMBER
SEMICOLON
ID y
COLON
NUMBER
SEMICOLON
RBRACE
IMPORT
ID hello
SEMICOLON
